
# name: Build and deploy ASP.Net Core app to an Azure Web App

# env:
#   AZURE_WEBAPP_NAME: AmonyCoffeeMis-V1    
#   AZURE_WEBAPP_PACKAGE_PATH: './publish'      
#   DOTNET_VERSION: '7.0.401'                

# on:
#   push:
#     branches: [ "master" ]
#   workflow_dispatch:

# permissions:
#   contents: read

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v3

#       - name: Set up .NET Core
#         uses: actions/setup-dotnet@v3
#         with:
#           dotnet-version: ${{ env.DOTNET_VERSION }}

#       - name: Set up dependency caching for faster builds
#         uses: actions/cache@v3
#         with:
#           path: ~/.nuget/packages
#           key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
#           restore-keys: |
#             ${{ runner.os }}-nuget-

#       - name: Build with dotnet
#         run: dotnet build AmonyCoffeeMIS.sln --configuration Release

#       - name: dotnet publish
#         run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp

#       - name: Upload artifact for deployment job
#         uses: actions/upload-artifact@v3
#         with:
#           name: .net-app
#           path: ${{env.DOTNET_ROOT}}/myapp

#   deploy:
#     permissions:
#       contents: none
#     runs-on: ubuntu-latest
#     needs: build
#     environment:
#       name: 'Development'
#       url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

#     steps:
#       - name: Download artifact from build job
#         uses: actions/download-artifact@v3
#         with:
#           name: .net-app

#       - name: Deploy to Azure Web App
#         id: deploy-to-webapp
#         uses: azure/webapps-deploy@v2
#         with:
#           app-name: ${{ env.AZURE_WEBAPP_NAME }}
#           publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
#           package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
 
# name: Publish

# on:
#   workflow_dispatch:
#   push:
#     branches:
#       - master

# env:
#   AZURE_WEBAPP_NAME: AmonyCoffeeMis-V1
#   AZURE_WEBAPP_PACKAGE_PATH: "./publish"

# jobs:
#   publish:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3

#       - name: Sample Azure action
#         with:
#           credentials: ${{ secrets.AZURE_CREDENTIALS }}
#         env:
#           credentials: ${{ secrets.AZURE_CREDENTIALS }}

#       - name: Setup .NET
#         uses: actions/setup-dotnet@v3
#         with:
#           dotnet-version: '7.0.x'

#       - name: Restore
#         run: dotnet restore ./AmonyCoffeeMIS.sln

#       - name: Build
#         run: dotnet build ./AmonyCoffeeMIS.sln --configuration Release --no-restore

#       - name: Publish
#         run: dotnet publish ./AmonyCoffeeMIS.sln --configuration Release --output "${{ env.AZURE_WEBAPP_PACKAGE_PATH }}"

#       - name: Deployment
#         uses: azure/webapps-deploy@v2
#         with:
#           app-name: ${{ env.AZURE_WEBAPP_NAME }}
#           publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
#           package: "${{ env.AZURE_WEBAPP_PACKAGE_PATH }}"










name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal

  test:
    runs-on: ubuntu-latest
    needs: build
       
    
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with: 
          dotnet-version: 6.0.x
          
      - run: dotnet test
      
  docker:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v3
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag amonycoffeemi:$(date +%s)

  deployment:
    runs-on: ubuntu-latest
    needs: docker
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3
      - name: Deploy
        uses: actions/setup-node@v3
        
      - run: curl ${{secrets.RENDER_BUILD_HOOK_AMONYCOFFEE }}
